<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_arms</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-15</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>selected = 0
block = "part1"
obj_spr[0] = spr_arms3
obj_spr[1] = spr_arms
obj_spr[4] = spr_head
obj_spr[3] = spr_head2
obj_spr[2] = spr_arms2
obj_spr[5] = spr_head3
obj_sprs = 6
chosen = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scale = 32*4

for(i=0 ; i&lt;obj_sprs ; i++)
    {
    xc = scale+i*(sprite_get_width(spr_base)+scale/2) +scale/2
    yc = scale*2 //scale*4 + scale/2 - scale
    //top left
    x1 = xc - scale //scale+i*(sprite_get_width(spr_base)+scale)-scale
    y1 = yc - scale //scale*4+scale/2
    //bottom right
    x2 = xc + scale //scale+(i+1)*(sprite_get_width(spr_base)+scale)-scale
    y2 = yc + scale //sprite_get_height(spr_base)
    //scale+i*(sprite_get_width(spr_base)+scale)+scale/2,scale*4+scale/2
    if selected = 0
    if inregion(mouse_x,mouse_y,x1,y1,x2,y2,0)
        {
        chosen = true;
        if mouse_check_button_pressed(1)
        //if position_meeting(mouse_x,mouse_y,self)
            {
            chosen = false;
            selected = obj_spr[i]
            xoff = mouse_x-xc
            yoff = mouse_y-yc
            }
        draw_sprite_ext(obj_spr[i],0,xc,yc,1.2,1.2,0,c_gray,1)
        }
    else
    chosen = false;
    if(!chosen)
    draw_sprite(obj_spr[i],0,xc,yc)
    //draw_rectangle(x1,y1,x2,y2,1)
    }
    
if selected&gt;0
    {
    draw_sprite(selected,0,mouse_x-xoff,mouse_y-yoff)
    if mouse_check_button_released(1)
        {
        nt=instance_create(mouse_x-xoff,mouse_y-yoff,obj_falling_part)
        nt.block = block;
        nt.sprite_index = selected
        nt.isBase = false;
        selected = 0
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
