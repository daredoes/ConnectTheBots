<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_keyboard_base</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>caps = false;
color = c_white;
text = "";
xsplit = 32;
ysplit = 16;
pushBy = 40;
row = y;
push = 15;
caps = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* for(i = 0; i &lt;640; i+= 32)
{
    draw_key(i,y,i+32,y+32,"1");
} */
//draw_text(room_width/2,room_height/2,text);
//Example Key
//draw_key(view_wview/xsplit*0,y+(view_hview/ysplit*0),(view_wview/xsplit)*1,y+(view_hview/ysplit*1),"`");
//Alt Keyboard
//Set Push
push = pushBy;

//Numbers
draw_key(x+view_wview/xsplit*0,y+(view_hview/ysplit*0),x+(view_wview/xsplit)*1,y+(view_hview/ysplit*1),"1");
draw_key(x+view_wview/xsplit*1,y+(view_hview/ysplit*0),x+(view_wview/xsplit)*2,y+(view_hview/ysplit*1),"2");
draw_key(x+view_wview/xsplit*2,y+(view_hview/ysplit*0),x+(view_wview/xsplit)*3,y+(view_hview/ysplit*1),"3");
draw_key(x+view_wview/xsplit*3,y+(view_hview/ysplit*0),x+(view_wview/xsplit)*4,y+(view_hview/ysplit*1),"4");
draw_key(x+view_wview/xsplit*4,y+(view_hview/ysplit*0),x+(view_wview/xsplit)*5,y+(view_hview/ysplit*1),"5");
draw_key(x+view_wview/xsplit*5,y+(view_hview/ysplit*0),x+(view_wview/xsplit)*6,y+(view_hview/ysplit*1),"6");
draw_key(x+view_wview/xsplit*6,y+(view_hview/ysplit*0),x+(view_wview/xsplit)*7,y+(view_hview/ysplit*1),"7");
draw_key(x+view_wview/xsplit*7,y+(view_hview/ysplit*0),x+(view_wview/xsplit)*8,y+(view_hview/ysplit*1),"8");
draw_key(x+view_wview/xsplit*8,y+(view_hview/ysplit*0),x+(view_wview/xsplit)*9,y+(view_hview/ysplit*1),"9");
draw_key(x+view_wview/xsplit*9,y+(view_hview/ysplit*0),x+(view_wview/xsplit)*10,y+(view_hview/ysplit*1),"0");
draw_key(x+view_wview/xsplit*10,y+(view_hview/ysplit*0),x+(view_wview/xsplit)*11,y+(view_hview/ysplit*1),"-");
//QWERTYUIOP
draw_key(x+push + view_wview/xsplit*0,y+(view_hview/ysplit*1),x+push + (view_wview/xsplit)*1,y+(view_hview/ysplit*2),"q");
draw_key(x+push + view_wview/xsplit*1,y+(view_hview/ysplit*1),x+push + (view_wview/xsplit)*2,y+(view_hview/ysplit*2),"w");
draw_key(x+push + view_wview/xsplit*2,y+(view_hview/ysplit*1),x+push + (view_wview/xsplit)*3,y+(view_hview/ysplit*2),"e");
draw_key(x+push + view_wview/xsplit*3,y+(view_hview/ysplit*1),x+push + (view_wview/xsplit)*4,y+(view_hview/ysplit*2),"r");
draw_key(x+push + view_wview/xsplit*4,y+(view_hview/ysplit*1),x+push + (view_wview/xsplit)*5,y+(view_hview/ysplit*2),"t");
draw_key(x+push + view_wview/xsplit*5,y+(view_hview/ysplit*1),x+push + (view_wview/xsplit)*6,y+(view_hview/ysplit*2),"y");
draw_key(x+push + view_wview/xsplit*6,y+(view_hview/ysplit*1),x+push + (view_wview/xsplit)*7,y+(view_hview/ysplit*2),"u");
draw_key(x+push + view_wview/xsplit*7,y+(view_hview/ysplit*1),x+push + (view_wview/xsplit)*8,y+(view_hview/ysplit*2),"i");
draw_key(x+push + view_wview/xsplit*8,y+(view_hview/ysplit*1),x+push + (view_wview/xsplit)*9,y+(view_hview/ysplit*2),"o");
draw_key(x+push + view_wview/xsplit*9,y+(view_hview/ysplit*1),x+push + (view_wview/xsplit)*10,y+(view_hview/ysplit*2),"p");
//ASDFGHJKL
push += pushBy;
draw_key(x+push + view_wview/xsplit*0,y+(view_hview/ysplit*2),x+push + (view_wview/xsplit)*1,y+(view_hview/ysplit*3),"a");
draw_key(x+push + view_wview/xsplit*1,y+(view_hview/ysplit*2),x+push + (view_wview/xsplit)*2,y+(view_hview/ysplit*3),"s");
draw_key(x+push + view_wview/xsplit*2,y+(view_hview/ysplit*2),x+push + (view_wview/xsplit)*3,y+(view_hview/ysplit*3),"d");
draw_key(x+push + view_wview/xsplit*3,y+(view_hview/ysplit*2),x+push + (view_wview/xsplit)*4,y+(view_hview/ysplit*3),"f");
draw_key(x+push + view_wview/xsplit*4,y+(view_hview/ysplit*2),x+push + (view_wview/xsplit)*5,y+(view_hview/ysplit*3),"g");
draw_key(x+push + view_wview/xsplit*5,y+(view_hview/ysplit*2),x+push + (view_wview/xsplit)*6,y+(view_hview/ysplit*3),"h");
draw_key(x+push + view_wview/xsplit*6,y+(view_hview/ysplit*2),x+push + (view_wview/xsplit)*7,y+(view_hview/ysplit*3),"j");
draw_key(x+push + view_wview/xsplit*7,y+(view_hview/ysplit*2),x+push + (view_wview/xsplit)*8,y+(view_hview/ysplit*3),"k");
draw_key(x+push + view_wview/xsplit*8,y+(view_hview/ysplit*2),x+push + (view_wview/xsplit)*9,y+(view_hview/ysplit*3),"l");
//ZXCVBNM.
push += pushBy;
draw_key(x+push + view_wview/xsplit*0,y+(view_hview/ysplit*3),x+push + (view_wview/xsplit)*1,y+(view_hview/ysplit*4),"z");
draw_key(x+push + view_wview/xsplit*1,y+(view_hview/ysplit*3),x+push + (view_wview/xsplit)*2,y+(view_hview/ysplit*4),"x");
draw_key(x+push + view_wview/xsplit*2,y+(view_hview/ysplit*3),x+push + (view_wview/xsplit)*3,y+(view_hview/ysplit*4),"c");
draw_key(x+push + view_wview/xsplit*3,y+(view_hview/ysplit*3),x+push + (view_wview/xsplit)*4,y+(view_hview/ysplit*4),"v");
draw_key(x+push + view_wview/xsplit*4,y+(view_hview/ysplit*3),x+push + (view_wview/xsplit)*5,y+(view_hview/ysplit*4),"b");
draw_key(x+push + view_wview/xsplit*5,y+(view_hview/ysplit*3),x+push + (view_wview/xsplit)*6,y+(view_hview/ysplit*4),"n");
draw_key(x+push + view_wview/xsplit*6,y+(view_hview/ysplit*3),x+push + (view_wview/xsplit)*7,y+(view_hview/ysplit*4),"m");
draw_key(x+push + view_wview/xsplit*7,y+(view_hview/ysplit*3),x+push + (view_wview/xsplit)*8,y+(view_hview/ysplit*4),".");
/* OLD KEYBOARD
//Row ~-BackSpace
draw_key(x+0,y,x+40,y+32,"`");
draw_key(x+40,y,x+72,y+32,"1");
draw_key(x+72,y,x+104,y+32,"2");
draw_key(x+104,y,x+136,y+32,"3");
draw_key(x+136,y,x+168,y+32,"4");
draw_key(x+168,y,x+200,y+32,"5");
draw_key(x+200,y,x+232,y+32,"6");
draw_key(x+232,y,x+264,y+32,"7");
draw_key(x+264,y,x+296,y+32,"8");
draw_key(x+296,y,x+328,y+32,"9");
draw_key(x+328,y,x+360,y+32,"0");
draw_key(x+360,y,x+392,y+32,"-");
draw_key(x+392,y,x+424,y+32,"=");
draw_key(x+424,y,x+504,y+32,"BK");
//Row Tab-\
draw_key(x+0,y+32,x+60,y+64,"TAB");
draw_key(x+60,y+32,x+92,y+64,"q");
draw_key(x+92,y+32,x+124,y+64,"w");
draw_key(x+124,y+32,x+156,y+64,"e");
draw_key(x+156,y+32,x+188,y+64,"r");
draw_key(x+188,y+32,x+220,y+64,"t");
draw_key(x+220,y+32,x+252,y+64,"y");
draw_key(x+252,y+32,x+284,y+64,"u");
draw_key(x+284,y+32,x+316,y+64,"i");
draw_key(x+316,y+32,x+348,y+64,"o");
draw_key(x+348,y+32,x+380,y+64,"p");
draw_key(x+380,y+32,x+412,y+64,"[");
draw_key(x+412,y+32,x+444,y+64,"]");
draw_key(x+444,y+32,x+504,y+64,"\");
//Row CAPS-Enter
draw_key(x+0,y+64,x+80,y+96,"CAPS");
draw_key(x+80,y+64,x+112,y+96,"a");
draw_key(x+112,y+64,x+144,y+96,"s");
draw_key(x+144,y+64,x+176,y+96,"d");
draw_key(x+176,y+64,x+208,y+96,"f");
draw_key(x+208,y+64,x+240,y+96,"g");
draw_key(x+240,y+64,x+272,y+96,"h");
draw_key(x+272,y+64,x+304,y+96,"j");
draw_key(x+304,y+64,x+336,y+96,"k");
draw_key(x+336,y+64,x+368,y+96,"l");
draw_key(x+368,y+64,x+400,y+96,";");
draw_key(x+400,y+64,x+432,y+96,"'");
draw_key(x+432,y+64,x+504,y+96,"ENTER");
//Row Shift-Shift
draw_key(x+0,y+96,x+100,y+128,"SHIFT");
draw_key(x+100,y+96,x+132,y+128,"z");
draw_key(x+132,y+96,x+164,y+128,"x");
draw_key(x+164,y+96,x+196,y+128,"c");
draw_key(x+196,y+96,x+228,y+128,"v");
draw_key(x+228,y+96,x+260,y+128,"b");
draw_key(x+260,y+96,x+292,y+128,"n");
draw_key(x+292,y+96,x+324,y+128,"m");
draw_key(x+324,y+96,x+356,y+128,",");
draw_key(x+356,y+96,x+388,y+128,".");
draw_key(x+388,y+96,x+420,y+128,"/");
draw_key(x+420,y+96,x+504,y+128,"SHIFT");
//Row SpaceBar
draw_key(x+0,y+128,x+504,y+160,"SPACE"); */
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>320,320</point>
  </PhysicsShapePoints>
</object>
